name: Build & Test
"on":
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: 01 13 * * SAT
jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version: stable
      - name: Set GOVERSION environment variable (Linux/macOS)
        if: runner.os != 'Windows'
        run: echo "GOVERSION=$(go version)" >> $GITHUB_ENV
      - name: Set GOVERSION environment variable (Windows)
        if: runner.os == 'Windows'
        run: echo "GOVERSION=$(go version)" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Run golangci-lint in dagger
        if: runner.os == 'Linux'
        uses: dagger/dagger-for-github@b81317a976cb7f7125469707321849737cd1b3bc # v7
        with:
          version: "latest"
          args: lint --source .
      - name: Build & Test
        run: |
          go build -v
          go test ./...
      - name: Run GoReleaser
        if: runner.os == 'Linux'
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6
        with:
          args: release --snapshot --skip=publish --clean
      - name: Colored Output Test
        if: runner.os == 'Linux'
        shell: script -q -e -c "bash {0}"
        run: go run main.go -- main.go
